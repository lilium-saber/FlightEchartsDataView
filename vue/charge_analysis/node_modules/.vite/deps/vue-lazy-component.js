import {
  __commonJS
} from "./chunk-P2LSHJDD.js";

// node_modules/vue-lazy-component/dist/vue-lazy-component.js
var require_vue_lazy_component = __commonJS({
  "node_modules/vue-lazy-component/dist/vue-lazy-component.js"(exports, module) {
    !function(t, e) {
      "object" == typeof exports && "object" == typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define([], e) : "object" == typeof exports ? exports["vue-lazy-component"] = e() : t["vue-lazy-component"] = e();
    }(exports, function() {
      return function(t) {
        function e(n) {
          if (i[n])
            return i[n].exports;
          var r = i[n] = { exports: {}, id: n, loaded: false };
          return t[n].call(r.exports, r, r.exports, e), r.loaded = true, r.exports;
        }
        var i = {};
        return e.m = t, e.c = i, e.p = "", e(0);
      }([function(t, e) {
        "use strict";
        function i(t2) {
          var e2 = t2.node;
          if (t2.end)
            for (; !e2.__vue__ && e2 !== t2.end && e2.nextSibling; )
              e2 = e2.nextSibling;
          return e2.__vue__;
        }
        function n(t2) {
          var e2 = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1], n2 = t2.FragmentFactory, r = t2.util, o = r.createAnchor, s = r.replace;
          t2.directive(e2.name || "lazy", { terminal: true, bind: function() {
            this.isInit = false, this.anchor = o("v-if"), s(this.el, this.anchor);
          }, update: function(t3) {
            var e3 = this;
            this.isInit || window.setTimeout(function() {
              e3.insert(), e3.updateRef(), e3.isInit = true;
            }, t3 || 0);
          }, unbind: function() {
            this.frag && this.frag.destroy();
          }, insert: function() {
            this.factory || (this.factory = new n2(this.vm, this.el)), this.frag = this.factory.create(this._host, this._scope, this._frag), this.frag.before(this.anchor);
          }, updateRef: function() {
            var t3 = this.descriptor.ref;
            if (t3) {
              var e3 = (this.vm || this._scope).$refs, n3 = e3[t3], r2 = this._frag.scope.$key;
              n3 && (Array.isArray(n3) ? n3.push(i(this._frag)) : n3[r2] = i(this._frag));
            }
          } });
        }
        Object.defineProperty(e, "__esModule", { value: true }), e["default"] = n;
      }]);
    });
  }
});
export default require_vue_lazy_component();
//# sourceMappingURL=vue-lazy-component.js.map
